// Mocks generated by Mockito 5.4.4 from annotations
// in my_favorite_books/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dio/dio.dart' as _i5;
import 'package:either_dart/src/either.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:my_favorite_books/core/error/failure.dart' as _i10;
import 'package:my_favorite_books/data/data_sources/remote/volumes_data_source.dart'
    as _i2;
import 'package:my_favorite_books/data/models/volume_request_model.dart' as _i6;
import 'package:my_favorite_books/data/models/volume_response_model.dart'
    as _i4;
import 'package:my_favorite_books/domain/entities/volume_request_entity.dart'
    as _i12;
import 'package:my_favorite_books/domain/entities/volume_response_entity.dart'
    as _i11;
import 'package:my_favorite_books/domain/repositories/remote/volumes_repository.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [VolumesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockVolumesDataSource extends _i1.Mock implements _i2.VolumesDataSource {
  MockVolumesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.VolumeResponseModel> getVolumes(
    _i5.CancelToken? cancelToken, {
    required _i6.VolumesRequestModel? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVolumes,
          [cancelToken],
          {#request: request},
        ),
        returnValue: _i3.Future<_i4.VolumeResponseModel>.value(
            _i7.dummyValue<_i4.VolumeResponseModel>(
          this,
          Invocation.method(
            #getVolumes,
            [cancelToken],
            {#request: request},
          ),
        )),
      ) as _i3.Future<_i4.VolumeResponseModel>);
}

/// A class which mocks [VolumesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVolumesRepository extends _i1.Mock implements _i8.VolumesRepository {
  MockVolumesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i9.Either<_i10.Failure?, _i11.VolumeResponseEntity>> getVolumes(
    _i5.CancelToken? token, {
    required _i12.VolumesRequestEntity? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVolumes,
          [token],
          {#request: request},
        ),
        returnValue: _i3
            .Future<_i9.Either<_i10.Failure?, _i11.VolumeResponseEntity>>.value(
            _i7.dummyValue<
                _i9.Either<_i10.Failure?, _i11.VolumeResponseEntity>>(
          this,
          Invocation.method(
            #getVolumes,
            [token],
            {#request: request},
          ),
        )),
      ) as _i3.Future<_i9.Either<_i10.Failure?, _i11.VolumeResponseEntity>>);
}
